https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum/


class Solution {
    
    private int getCountOfSubarrayWithGivenUpperBound(int[] nums, int upperBound){
        int n = nums.length;
        int ans = 0;
        int currCt = 0;
        for(int i=0;i<n;i++){
            if(nums[i]<=upperBound){
                currCt++;
            }else{
                ans = ans + (currCt*(currCt+1))/2;
                currCt = 0;
            }
        }
        ans = ans + (currCt*(currCt+1))/2;
        return ans;
    }
    
    public int numSubarrayBoundedMax(int[] nums, int left, int right) {
        return getCountOfSubarrayWithGivenUpperBound(nums, right)-getCountOfSubarrayWithGivenUpperBound(nums,left-1);
        
    }
}
