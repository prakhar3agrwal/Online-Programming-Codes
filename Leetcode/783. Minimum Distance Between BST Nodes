https://leetcode.com/problems/minimum-distance-between-bst-nodes

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
        int ans = Integer.MAX_VALUE;
    int prevVal = -1;
    private void helper(TreeNode root){
        if(root == null){
            return;
        }
        helper(root.left);
        if(prevVal !=-1){
            ans = Math.min(ans, Math.abs(prevVal-root.val));    
        }
        prevVal = root.val;
        helper(root.right);
        
        
    }
    public int minDiffInBST(TreeNode root) {
        helper(root);
        return ans;
    }

}
