https://leetcode.com/problems/maximum-binary-tree

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    private int getMaxNumIndex(int[] nums, int left, int right){
        int index = left;
        for(int i=left+1;i<=right;i++){
            if(nums[i]>nums[index]){
                index = i;
            }
        }
        return index;
    }
    
    private TreeNode solve(int[] nums, int left, int right){
        if(left>right){
            return null;
        }
        if(left == right){
            return new TreeNode(nums[left]);
        }
        int index = getMaxNumIndex(nums, left, right);
        TreeNode node = new TreeNode(nums[index]);
        node.left = solve(nums, left, index-1);
        node.right = solve(nums, index+1, right);
        return node;
    }
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        return solve(nums, 0, nums.length-1);
    }
}
