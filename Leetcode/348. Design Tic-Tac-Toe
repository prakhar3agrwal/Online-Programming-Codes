https://leetcode.com/problems/design-tic-tac-toe

class TicTacToe {

    int N;
    int[][] rows;
    int[][] cols;
    int[] leftDiagonal = new int[3];
    int[] rightDiagonal = new int[3];
    /** Initialize your data structure here. */
    public TicTacToe(int n) {
        N = n;
        rows = new int[n][3];
        cols = new int[n][3];
    }
    
    /** Player {player} makes a move at ({row}, {col}).
        @param row The row of the board.
        @param col The column of the board.
        @param player The player, can be either 1 or 2.
        @return The current winning condition, can be either:
                0: No one wins.
                1: Player 1 wins.
                2: Player 2 wins. */

    public int move(int row, int col, int player) {
        rows[row][player]++;
        if(rows[row][player] == N){
            return player;
        }
        cols[col][player]++;
        if(cols[col][player] == N){
            return player;
        }
        if(row==col){
            leftDiagonal[player]++;
            if(leftDiagonal[player] == N){
                return player;
            }
        }
        if(row + col == N-1){
            rightDiagonal[player]++;
            if(rightDiagonal[player] == N){
                return player;
            }
        }
        return 0;
    }
}

/**
 * Your TicTacToe object will be instantiated and called as such:
 * TicTacToe obj = new TicTacToe(n);
 * int param_1 = obj.move(row,col,player);
 */
