https://leetcode.com/problems/house-robber-ii/


class Solution {
    
    private int solve(int[] nums, int start, int ind, int dp[]){
        if(ind<start){
            return 0;
        }
        if(dp[ind]!=-1){
            return dp[ind];
        }
        
        dp[ind] = Math.max(solve(nums,start, ind-2, dp) + nums[ind],
                          solve(nums,start, ind-1,dp));
        return dp[ind];
        
    }
    
    public int rob(int[] nums) {
        int n = nums.length;
        if(n == 1){
            return nums[0];
        }
        int[] dp = new int[n];
        Arrays.fill(dp,-1);

        dp[0] = nums[0];
        int ans1 = solve(nums, 0, n-2, dp);
        Arrays.fill(dp,-1);
        
        dp[1] = nums[1];
        int ans2 = solve(nums, 1, n-1, dp);
        
        return Math.max(ans1, ans2);
    }
}
