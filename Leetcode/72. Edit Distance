https://leetcode.com/problems/edit-distance

class Solution {
    
    int[][] dp;
    private int solve(String word1, String word2, int ind1, int ind2){
        
        if(ind1 <0 && ind2 <0){
            return 0;
        }
        if(ind1 <0|| ind2<0){
            return ind1<0?ind2+1:ind1+1;
        }
        
        if(dp[ind1+1][ind2+1] != Integer.MAX_VALUE){
            return dp[ind1+1][ind2+1];
        }
        
        
        if(word1.charAt(ind1) == word2.charAt(ind2)){
            return dp[ind1+1][ind2+1] = solve(word1, word2, ind1-1, ind2-1);
        }
        
        dp[ind1+1][ind2+1] = 1+ Math.min(solve(word1, word2, ind1, ind2-1),
                                     Math.min(solve(word1, word2, ind1-1, ind2),
                                             solve(word1, word2, ind1-1, ind2-1)));
        
        return dp[ind1+1][ind2+1];
        
    }
        
        
    public int minDistance(String word1, String word2) {
        int n = word1.length();
        int m = word2.length();
        dp = new int[n+1][m+1];
        
        for(int i=0;i<n+1;i++){
            Arrays.fill(dp[i], Integer.MAX_VALUE);
        }
        
        return solve(word1, word2, n-1,m-1);
    }
}
