https://leetcode.com/problems/minimum-falling-path-sum-ii

class Solution {
    private int findDifferentColumnMin(int[][] arr, int row, int col){
        int n = arr.length;
        int ans = Integer.MAX_VALUE;
        for(int i=0;i<n;i++){
            if(i != col){
                ans = Math.min(ans, arr[row-1][i]);
            }
        }
        return ans;
        
    }
    public int minFallingPathSum(int[][] arr) {
       int n = arr.length;
        
        for(int i=1;i<n;i++){
            for(int j=0;j<n;j++){
                arr[i][j] += findDifferentColumnMin(arr, i, j);
            }
        }
        
        
        int ans = arr[n-1][0];
        for(int i=1;i<n;i++){
            ans = Math.min(ans, arr[n-1][i]);
        }
        
        return ans;
    }
    
}
