https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array


class Solution {
    public int[] searchRange(int[] nums, int target) {
        int n = nums.length;
        int[] ans = new int[2];
        ans[0] = ans[1] = -1;
        
        if(n==0){
            return ans;
        }
        
        int low = 0, high = n-1;
        int mid = (low+high)/2;
        int firstOccurrrence = -1;
        while(low<=high){
            if(nums[mid] == target){
                firstOccurrrence = mid;
            }
            if(nums[mid]>=target){
                high  = mid-1;
            }else{
                low = mid+1;
            }
            mid = (low+high)/2;
        }
        
        low = 0; high = n-1;
        mid = (low+high)/2;
        int lastOccurrrence = -1;
        while(low<=high){
            if(nums[mid] == target){
                lastOccurrrence = mid;
            }
            if(nums[mid]<=target){
                low  = mid+1;
            }else{
                high = mid-1;
            }
            mid = (low+high)/2;
        }
        
        ans[0] = firstOccurrrence;
        ans[1] = lastOccurrrence;
        
        return ans;
    }
}
