https://leetcode.com/problems/populating-next-right-pointers-in-each-node

/*
// Definition for a Node.
class Node {
    public int val;
    public Node left;
    public Node right;
    public Node next;

    public Node() {}
    
    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, Node _left, Node _right, Node _next) {
        val = _val;
        left = _left;
        right = _right;
        next = _next;
    }
};
*/

class Solution {
    Node dummy = new Node(10000);
    private void pushChildren(Node node, Queue<Node> q){
        if(null == node){
            return;
        }
        if(node.left!=null){
            q.add(node.left);
        }
        if(node.right!=null){
            q.add(node.right);
        }
    }
    public Node connect(Node root) {
        if(null == root){
            return root;
        }
        Queue<Node> q = new LinkedList<>();
        q.add(root);
        while(!q.isEmpty()){
            q.add(dummy);
            Node prevNode = q.poll();
            pushChildren(prevNode, q);
            Node currNode = q.poll();
            while(currNode != dummy){
                pushChildren(currNode, q);
                prevNode.next = currNode;
                prevNode = currNode;
                currNode = q.poll();
            }
        }
        return root;
    }
}
