https://leetcode.com/problems/balanced-binary-tree

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private int height(TreeNode root){
        if(null == root){
            return 0;
        }
        return (Math.max(height(root.left),height(root.right))+1);
    }
    private boolean helper(TreeNode root){
        if(null == root){
            return true;
        }    

        return Math.abs(height(root.left)-height(root.right))<=1
            && helper(root.left)
            && helper(root.right);
        
    }
    
    public boolean isBalanced(TreeNode root) {
        return helper(root);
    }
}
