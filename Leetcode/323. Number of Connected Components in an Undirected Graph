https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph

class Solution {
    
    int[] parent = null;
    private int find(int a){
        int root = a;
        while(root!=parent[root]){
            root =parent[root];
        }
        return root;
    }
                           
    private void union(int a, int b){
        int parentA = find(a);
        int parentB = find(b);
        
        parent[parentA] = parentB;
    }
    
    public int countComponents(int n, int[][] edges) {
        parent = new int[n];
        for(int i=0;i<n;i++){
            parent[i]=i;
        }
        
        int len = edges.length;
        for(int i=0;i<len;i++){
            int node1 = edges[i][0];
            int node2 = edges[i][1];
            if(find(node1)!=find(node2)){
                union(node1, node2);
            }
        }
        Set<Integer> s =new HashSet<>();
        
        for(int i=0;i<n;i++){
            s.add(find(i));
        }
        return s.size();
    }
}
