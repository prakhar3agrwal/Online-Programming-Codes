https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

class Solution {
    
    private TreeNode solve(TreeNode root, TreeNode p, TreeNode q){
        if(root == null){
            return null;
        }
        if(p.val < root.val && root.val < q.val){
            return root;
        }
        if(root == p || root ==q){
            return root;
        }
        
        if(root.val > q.val){
            return solve(root.left, p,q);
        }
        return solve(root.right, p,q);
    }
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(p.val > q.val){
            TreeNode x = p;
            p = q;
            q = x;
        }
        return solve(root, p,q);
    }
}
