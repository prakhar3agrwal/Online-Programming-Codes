https://leetcode.com/problems/word-search

class Solution {
    
    private boolean solve(char[][] board, int row, int col, String word, int ind){
        if(ind + 1 == word.length()){
            return true;
        }
        
        int[] rowOffsets = {0,-1,0,1};
        int[] colOffsets = {-1,0,1,0};
        
        char currChar = board[row][col];
        board[row][col] = '.';
        
        for(int i=0;i<4;i++){
            int newRow = row + rowOffsets[i];
            int newCol = col + colOffsets[i];
            
            if(newRow<0 || newRow>= board.length || newCol <0 || newCol >= board[0].length || 
              board[newRow][newCol]!=word.charAt(ind +1)){
                continue;
            }
            if(solve(board, newRow, newCol, word, ind+1)){
                return true;
            }
        }
        board[row][col] = currChar;
        return false;
        
    }
    public boolean exist(char[][] board, String word) {
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                if(word.charAt(0) == board[i][j]){
                    if(solve(board, i,j,word,0)){
                        return true;
                    }
                }
            }
        }
        return  false;
    }
        
}
