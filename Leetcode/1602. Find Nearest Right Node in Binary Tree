https://leetcode.com/problems/find-nearest-right-node-in-binary-tree

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int level = Integer.MAX_VALUE;
    TreeNode ans = null;
    private void solve(TreeNode root, TreeNode u, int currLevel){
        if(root == null){
            return;
        }
        if(root == u){
            level = currLevel;
            return;
        }
        if(level == currLevel && ans == null){ 
            ans = root;
        }
        solve(root.left, u, currLevel+1);
        solve(root.right, u, currLevel+1);
        
    }
    public TreeNode findNearestRightNode(TreeNode root, TreeNode u) {
        solve(root, u, 0);
        return ans;
    }
}
